/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        screenshot {
            bindings = <&kp LG(LS(KP_NUMBER_4))>;
            key-positions = <40 10>;
        };

        alt-tab {
            bindings = <&kp LA(TAB)>;
            key-positions = <38 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q             &kp W  &kp E     &kp R  &kp T                      &kp Y          &kp U  &kp I      &kp O    &kp P                 &kp RETURN
&kp LCTRL  &lt 3 A           &kp S  &kp D     &kp F  &kp G                      &kp H          &kp J  &kp K      &kp L    &kp SEMI              &kp SQT
&kp LSHFT  &mt LEFT_SHIFT Z  &kp X  &kp C     &kp V  &kp B                      &kp N          &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT FSLH  &kp ESC
                                    &kp LGUI  &mo 1  &mt LA(LS(LCTRL)) SPACE    &kp BACKSPACE  &mo 2  &kp RALT
            >;
        };

        nav+brackets {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1         &kp KP_EQUAL      &kp LPAR        &kp RPAR         &kp GREATER_THAN     &kp HOME    &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &kp N0  &trans
&trans     &kp LESS_THAN  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp RIGHT_BRACKET    &kp LEFT    &kp DOWN       &kp UP        &kp RIGHT  &trans  &kp CAPSLOCK
&kp LSHFT  &kp UNDER      &kp MINUS         &kp PIPE        &kp GRAVE        &kp TILDE            &bt BT_CLR  &bt BT_SEL 0   &bt BT_SEL 1  &trans     &trans  &trans
                                            &kp LGUI        &trans           &kp SPACE            &trans      &trans         &kp RALT
            >;
        };

        num+symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL         &kp KP_NUMBER_7  &kp KP_N8        &kp KP_N9        &kp PRCNT    &kp PLUS   &kp AMPS    &kp KP_MULTIPLY  &kp KP_EQUAL  &kp RPAR  &trans
&kp LCTRL  &trans           &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp COMMA    &kp MINUS  &kp DOLLAR  &kp PERCENT      &kp CARET     &kp BSLH  &kp GRAVE
&kp LSHFT  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp DOT      &kp UNDER  &kp PLUS    &kp AT           &kp HASH      &kp PIPE  &kp TILDE
                                             &kp LGUI         &trans           &kp SPACE    &trans     &trans      &kp RALT
            >;
        };

        audio {
            bindings = <
&trans  &trans  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOL_UP    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &trans            &trans      &kp C_VOL_DN    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &trans            &trans      &kp K_MUTE      &trans  &trans  &trans  &trans  &trans  &trans
                            &trans            &trans      &trans          &trans  &trans  &trans
            >;
        };
    };
};
