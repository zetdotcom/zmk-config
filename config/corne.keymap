/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <175>;
};

&sk {
    quick-release;
};

/ {
    combos {
        compatible = "zmk,combos";

        screenshot {
            bindings = <&kp LG(LS(KP_NUMBER_4))>;
            key-positions = <40 10>;
        };

        alt-tab {
            bindings = <&kp LA(TAB)>;
            key-positions = <38 0>;
        };
    };

    behaviors {
        sticky_hold: sticky_hold {
            compatible = "zmk,behavior-tap-dance";
            label = "STICKY_HOLD";
            #binding-cells = <0>;
            bindings = <&sk LSHIFT>, <&kp LSHIFT>;

            tapping-term-ms = <170>;
        };
        osmshift_meta: osmshift_meta {
            compatible = "zmk,behavior-tap-dance";
            label = "OSMSHIFT_META";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT>, <&kp LS(LC(LEFT_ALT))>;
        };
        osmshift_meta2: osmshift_meta2 {
            compatible = "zmk,behavior-hold-tap";
            label = "OSMSHIFT_META2";
            bindings = <&mt>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp KP_EQUAL  &kp Q             &kp W        &kp E           &kp R                     &kp T          &kp Y            &lt 4 U          &kp I            &kp O        &kp P                 &kp RETURN
&kp TAB       &lt 3 A           &mt LCTRL S  &mt LEFT_ALT D  &mt LEFT_GUI F            &kp G          &kp H            &mt RIGHT_GUI J  &mt RIGHT_ALT K  &mt RCTRL L  &kp SQT               &kp SEMI
&kp KP_MINUS  &mt LEFT_SHIFT Z  &kp X        &kp C           &kp V                     &kp B          &kp N            &kp M            &kp COMMA        &kp DOT      &mt RIGHT_SHIFT FSLH  &kp UNDER
                                             &sticky_hold    &mt LS(LC(LEFT_ALT)) ESC  &lt 1 SPACE    &lt 2 BACKSPACE  &kp DELETE       &sticky_hold
            >;
        };

        nav+brackets {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL       &kp KP_EQUAL    &kp LPAR           &kp RPAR           &kp GREATER_THAN     &kp HOME    &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &kp N0             &trans
&trans  &kp LESS_THAN  &mt LBKT LCTRL  &mt LEFT_ALT LBRC  &mt LEFT_GUI RBRC  &kp RIGHT_BRACKET    &kp LEFT    &kp DOWN       &kp UP        &kp RIGHT  &trans             &kp CAPSLOCK
&trans  &kp UNDER      &kp MINUS       &kp PIPE           &kp GRAVE          &kp TILDE            &bt BT_CLR  &bt BT_SEL 0   &bt BT_SEL 1  &trans     &ext_power EP_TOG  &bootloader
                                       &trans             &trans             &trans               &trans      &trans         &trans
            >;

            label = "nav";
        };

        num+symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL         &kp KP_NUMBER_7        &kp KP_N8                 &kp KP_N9             &kp PRCNT    &kp PLUS   &kp AMPS         &kp KP_MULTIPLY        &kp KP_EQUAL     &kp RPAR  &kp DEL
&trans  &trans           &mt LCTRL KP_NUMBER_4  &mt LEFT_ALT KP_NUMBER_5  &mt LGUI KP_NUMBER_6  &kp COMMA    &kp MINUS  &mt RGUI DOLLAR  &mt RIGHT_ALT PERCENT  &mt RCTRL CARET  &kp BSLH  &kp GRAVE
&trans  &kp KP_NUMBER_0  &kp KP_NUMBER_1        &kp KP_NUMBER_2           &kp KP_NUMBER_3       &kp DOT      &kp UNDER  &kp PLUS         &kp AT                 &kp HASH         &kp PIPE  &kp TILDE
                                                &trans                    &trans                &trans       &trans     &trans           &trans
            >;

            label = "num+sym";
        };

        audio {
            bindings = <
&trans  &trans  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOL_UP    &kp F12  &kp F7  &kp F8  &kp F9  &trans  &trans
&trans  &trans  &trans      &trans            &trans      &kp C_VOL_DN    &kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans
&trans  &trans  &trans      &trans            &trans      &kp K_MUTE      &kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans
                            &trans            &trans      &trans          &trans   &trans  &trans
            >;

            label = "audio f";
        };

        brackets {
            bindings = <
&trans  &kp EXCL        &kp EQUAL         &kp LPAR          &kp RPAR           &kp GT       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LT          &kp LEFT_BRACKET  &kp LBRC          &kp RBRC           &kp RBKT     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp UNDERSCORE  &kp MINUS         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp TILDE    &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans            &trans             &trans       &trans  &trans  &trans
            >;

            label = "brackets";
        };
    };
};
